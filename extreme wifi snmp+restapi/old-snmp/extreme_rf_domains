#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# H. Eudenbach in the year 2021

def convert_to_mac(mac_string):
    int_array = map(ord, mac_string)
    hex_array = map(lambda iv: format(iv, 'x').zfill(2), int_array)
    mac_address = ':'.join(hex_array)
    return mac_address

def is_mac_address(possible_mac_adress):
    val_raw = possible_mac_adress.encode('unicode-escape')
    return True if "\\" in val_raw else False

def inventory_rf_domains(info):
    for line in info:
        if len(line[0]) > 0:
            yield line[0], None

def check_rf_domains(item, params, info):
    for line in info:
        if item == line[0]:
            mac = convert_to_mac(line[1]) if is_mac_address(line[1]) else ""
            ap = saveint(line[2])
            yield 0, "Mac: %s, AP: %d" % (mac, ap), [('ap', ap)]
    
check_info["extreme_rf_domains"] = {
    'check_function':           check_rf_domains,
    'inventory_function':       inventory_rf_domains,
    'service_description':      "Extreme Networks - RFD: %s",
    'has_perfdata':             True,
    'snmp_info':                ('.1.3.6.1.4.1.388.50.1.4.3.1.1', [
        1, # names,
        2, # macs,
        3, # ap-count
    ]),
    'snmp_scan_function':       lambda oid: oid('.1.3.6.1.4.1.388.50.1.4.3.1.1.1.*') != None
}
